// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {
  id       String   @id @default(uuid())
  fullname String   @db.VarChar(255)
  email    String   @unique @db.VarChar(255)
  phone    String   @unique @db.VarChar(15)
  password String   @db.VarChar(255)
  role     Role     @default(user)
  rental   Rental[]
  order    Order[]
  ProfileInfoTable ProfileInfoTable?
}

model Rental {
  id          String         @id @default(uuid())
  userId      String
  picture     String?
  description String         @db.VarChar(500)
  alamat      String         @db.VarChar(255)
  mapurl      String         @db.VarChar(255)
  open        String
  close       String
  user        User           @relation(fields: [userId], references: [id])
  tv          Tv[]
  gallery     GalleryTable[]
}

model Tv {
  id       String @id @default(uuid())
  user     String @db.VarChar(255)
  time     String
  rentalId String
  rental   Rental @relation(fields: [rentalId], references: [id])
  detail   DetailOrder[]
}

model GalleryTable {
  id       String @id @default(uuid())
  filename String
  mimetype String
  rentalId String
  rental   Rental @relation(fields: [rentalId], references: [id])
}

model Order {
  id               String   @id @default(uuid())
  userId           String
  playStatus       Boolean
  orderStatus      Boolean
  statusPembayaran Boolean
  createdAt        DateTime
  updatedAt        DateTime
  user             User     @relation(fields: [userId], references: [id])
  detailOrder      DetailOrder?
}

model DetailOrder {
  id    String @id @default(uuid())
  orderId String @unique
  order Order @relation(fields: [orderId], references: [id])
  tv    Tv @relation(fields: [tvId], references: [id])
  tvId  String
  jam   String
}

model ProfileInfoTable {
  id      String @id @default(uuid())
  user User   @relation(fields: [userId], references: [id])
  userId  String @unique
  picture String
  bio     String @db.VarChar(500)
}